/*
 * lzdatagen - LZ data generator
 *
 * Copyright 2016-2023 Joergen Ibsen
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 */

#ifndef LZDATAGEN_H_INCLUDED
#define LZDATAGEN_H_INCLUDED

#include <stddef.h>

#ifdef __cplusplus
extern "C" {
#endif

#define LZDG_VER_MAJOR 0        /**< Major version number */
#define LZDG_VER_MINOR 2        /**< Minor version number */
#define LZDG_VER_PATCH 0        /**< Patch version number */
#define LZDG_VER_STRING "0.2.0" /**< Version number as a string */

/**
 * Generate compressible data.
 *
 * Data is generated by inserting sequences of either random bytes or
 * repetitions from a buffer of bytes, depending on the ratio parameter.
 *
 * Based on "SDGen: Mimicking Datasets for Content Generation in Storage
 * Benchmarks" by RaÃºl Gracia-Tinedo et al. (https://www.usenix.org/node/188461)
 *
 * Instead of sampling actual data, this uses a simple power function to
 * determine the distributions of literals values and match lenghts.
 *
 * @param ptr pointer to where to store generated data
 * @param size number of bytes to generate
 * @param ratio desired compression ratio
 * @param len_exp exponent used for distribution of lenghts
 * @param lit_exp exponent used for distribution of literals
 */
void
lzdg_generate_data(void *ptr, size_t size, double ratio, double len_exp, double lit_exp);

/**
 * Generate compressible data in bulk.
 *
 * This uses a faster but less precise method of generating the literals,
 * and is useful when generating large amounts of data.
 *
 * @see lzdg_generate_data
 *
 * @param ptr pointer to where to store generated data
 * @param size number of bytes to generate
 * @param ratio desired compression ratio
 * @param len_exp exponent used for distribution of lenghts
 * @param lit_exp exponent used for distribution of literals
 */
void
lzdg_generate_data_bulk(void *ptr, size_t size, double ratio, double len_exp, double lit_exp);

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif /* LZDATAGEN_H_INCLUDED */
